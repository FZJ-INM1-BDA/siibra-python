name: '[test] unit test'

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  USE_CONFIG_COMMIT_KW: "[ci:usecfg]"

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - run: pip install flake8
    - run: flake8 .
  
  use-custom-cfg:
    runs-on: ubuntu-latest
    outputs:
      USE_REF: ${{ steps.use-ref.outputs.USE_REF }}
    env:
      # see https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
      COMMIT_MSG: ${{ github.event.head_commit.message }}
    steps:
    - uses: actions/checkout@v4
    - id: 'use-ref'
      run: |
        SED_S_PATTERN=$(echo '${{ env.USE_CONFIG_COMMIT_KW }}' | sed 's/\[/\\[/' | sed 's/]/\\]/')
        echo "$COMMIT_MSG" | while IFS= read -r line
        do
          if [[ "$line" == "${{ env.USE_CONFIG_COMMIT_KW }}"* ]]
          then
            echo "Found usecfg line in commit message: $line"
            USE_REF=$(echo $line | sed "s/$SED_S_PATTERN *//")
            echo "Use Ref: $USE_REF"
            echo USE_REF=$USE_REF >> $GITHUB_OUTPUT
          fi
        done
  
  unit-tests:
    runs-on: ubuntu-latest
    needs: use-custom-cfg
    env:
      # unit tests should not need tokens
      
      # KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
      # KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
      SIIBRA_LOG_LEVEL: DEBUG
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.12', '3.11', '3.10', '3.9', '3.8', '3.7' ]

    steps:
    - uses: actions/checkout@v4
    - if: ${{ needs.use-custom-cfg.outputs.USE_REF != '' }}
      uses: './.github/workflows/setup-custom-cfg'
      with:
        siibra-cfg-ref: ${{ needs.use-custom-cfg.outputs.USE_REF }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -U .
        pip install -r requirements-test.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install test dependencies
      run:  pip install pytest pytest-cov coverage
    - name: Run test with pytest
      run: |
        echo "Using github.ref: $GITHUB_REF"
        if [[ "$GITHUB_REF" != "refs/heads/main" ]]
        then
          export FAST_RUN=1
        fi
        pytest -rx
  
  e2e-tests:
    needs: use-custom-cfg
    runs-on: ${{ matrix.os }}
    env:
      # KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
      # KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
      FOO: BAR
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        python-version: [ '3.12', '3.11', '3.10', '3.9', '3.8', '3.7' ]

    steps:
    - uses: actions/checkout@v4
    - if: ${{ needs.use-custom-cfg.outputs.USE_REF != '' }}
      uses: './.github/workflows/setup-custom-cfg'
      with:
        siibra-cfg-ref: ${{ needs.use-custom-cfg.outputs.USE_REF }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
          
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install -U .
        pip install -r requirements-test.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install test dependencies
      run:  pip install pytest pytest-cov coverage
    - name: Run test with pytest
      shell: bash
      run: |
        export SIIBRA_CACHEDIR=${{ runner.temp }}
        echo "Using github.ref: $GITHUB_REF"
        if [[ "$GITHUB_REF" != "refs/heads/main" ]]
        then
          export FAST_RUN=1
        fi
        pytest -rx e2e

  check-importable:
    runs-on: ubuntu-latest
    env:
      KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
      KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.12', '3.11', '3.10', '3.9', '3.8', '3.7' ]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -U .
    
    - name: cd to / and try to import
      run: |
        cd / && python -c 'import siibra'
