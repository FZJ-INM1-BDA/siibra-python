# generated by datamodel-codegen:
#   filename:  sxplr.on.parcellationSelected__fromSxplr__request.json
#   timestamp: 2023-12-07T15:40:36+00:00

from __future__ import annotations

from dataclasses import dataclass, field
from typing import Any, Dict, List, Optional


@dataclass
class EbrainsDsPerson:
    field_type: str
    field_id: str
    schema_org_shortName: str
    identifier: str
    shortName: str
    name: str


@dataclass
class EbrainsDsUrl:
    field_type: str
    url: str


@dataclass
class SiibraAtIdModel:
    field_id: str


@dataclass
class VocabModel:
    field_vocab: str


@dataclass
class EbrainsDatasetModel:
    field_type: str
    field_id: str
    name: str
    urls: List[EbrainsDsUrl]
    contributors: List[EbrainsDsPerson]
    custodians: List[EbrainsDsPerson]
    description: Optional[str] = None
    ebrains_page: Optional[str] = None


@dataclass
class SiibraParcellationVersionModel:
    field_type: str
    name: str
    deprecated: Optional[bool] = None
    prev: Optional[SiibraAtIdModel] = None
    next: Optional[SiibraAtIdModel] = None


@dataclass
class Copyright:
    holder: List
    year: str
    field_context: Optional[VocabModel] = field(
        default_factory=lambda: {'@vocab': 'https://openminds.ebrains.eu/vocab/'}
    )


@dataclass
class HasTerminologyVersion:
    hasEntityVersion: List
    field_context: Optional[VocabModel] = field(
        default_factory=lambda: {'@vocab': 'https://openminds.ebrains.eu/vocab/'}
    )
    definedIn: Optional[List] = None
    ontologyIdentifier: Optional[List[str]] = None


@dataclass
class OtherContribution:
    contributionType: List
    contributor: Any
    field_context: Optional[VocabModel] = field(
        default_factory=lambda: {'@vocab': 'https://openminds.ebrains.eu/vocab/'}
    )


@dataclass
class BrainAtlasVersionModel:
    field_type: str
    field_id: str
    accessibility: Dict[str, Any]
    coordinateSpace: Dict[str, Any]
    fullDocumentation: Dict[str, Any]
    hasTerminologyVersion: HasTerminologyVersion
    license: Dict[str, Any]
    releaseDate: str
    shortName: str
    versionIdentifier: str
    versionInnovation: str
    field_context: Optional[VocabModel] = field(
        default_factory=lambda: {'@vocab': 'https://openminds.ebrains.eu/vocab/'}
    )
    abbreviation: Optional[str] = None
    atlasType: Optional[Dict[str, Any]] = None
    author: Optional[List] = None
    copyright: Optional[Copyright] = None
    custodian: Optional[List] = None
    description: Optional[str] = None
    digitalIdentifier: Optional[Dict[str, Any]] = None
    fullName: Optional[str] = None
    funding: Optional[List] = None
    homepage: Optional[Dict[str, Any]] = None
    howToCite: Optional[str] = None
    isAlternativeVersionOf: Optional[List] = None
    isNewVersionOf: Optional[Dict[str, Any]] = None
    keyword: Optional[List] = None
    ontologyIdentifier: Optional[List[str]] = None
    otherContribution: Optional[OtherContribution] = None
    relatedPublication: Optional[List] = None
    repository: Optional[Dict[str, Any]] = None
    supportChannel: Optional[List[str]] = None


@dataclass
class PTParcellation:
    field_type: str
    field_id: str
    name: str
    datasets: List[EbrainsDatasetModel]
    brainAtlasVersions: List[BrainAtlasVersionModel]
    modality: Optional[str] = None
    version: Optional[SiibraParcellationVersionModel] = None
    shortname: Optional[str] = None


@dataclass
class Model:
    jsonrpc: str = '2.0'
    method: str = 'sxplr.on.parcellationSelected'
    params: Optional[PTParcellation] = None
