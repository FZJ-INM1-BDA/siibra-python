# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/HumanBrainProject/openMINDS/dbb4c54/v3/SANDS/v3/miscellaneous/coordinatePoint.schema.json
#   timestamp: 2021-11-25T12:26:49+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class Coordinates(BaseModel):
    typeOfUncertainty: Optional[Any] = Field(
        None,
        description='Distinct technique used to quantify the uncertainty of a measurement.',
        title='typeOfUncertainty',
    )
    uncertainty: Optional[List[float]] = Field(
        None,
        description='Quantitative value range defining the uncertainty of a measurement.',
        max_items=2,
        min_items=2,
        title='uncertainty',
    )
    unit: Optional[Any] = Field(
        None,
        description='Determinate quantity adopted as a standard of measurement.',
        title='unit',
    )
    value: float = Field(..., description='Entry for a property.', title='value')


class Model(BaseModel):
    _id: str = Field(..., alias='@id', description='Metadata node identifier.')
    _type: str = Field(..., alias='@type')
    coordinateSpace: Dict[str, Any] = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/coordinateSpace',
        description='Two or three dimensional geometric setting.',
        title='coordinateSpace',
    )
    coordinates: Coordinates = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/coordinates',
        description='Structured information on a quantitative value.',
    )
