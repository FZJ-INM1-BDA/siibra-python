# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/HumanBrainProject/openMINDS/dbb4c54/v3/SANDS/v3/atlas/parcellationEntity.schema.json
#   timestamp: 2021-11-29T11:19:03+00:00

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class Model(BaseModel):
    id: str = Field(..., alias='@id', description='Metadata node identifier.')
    type: str = Field(..., alias='@type')
    has_parent: Optional[List[Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/hasParent',
        description='Reference to a parent object or legal person.',
        min_items=1,
        title='hasParent',
    )
    has_version: Optional[List[Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/hasVersion',
        description='Reference to variants of an original.',
        min_items=1,
        title='hasVersion',
    )
    lookup_label: Optional[str] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/lookupLabel',
        title='lookupLabel',
    )
    name: str = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/name',
        description='Word or phrase that constitutes the distinctive designation of a being or thing.',
        title='name',
    )
    ontology_identifier: Optional[List[str]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/ontologyIdentifier',
        description='Term or code used to identify something or someone registered within a particular ontology.',
        min_items=1,
        title='ontologyIdentifier',
    )
    related_uberon_term: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/relatedUBERONTerm',
        title='relatedUBERONTerm',
    )
