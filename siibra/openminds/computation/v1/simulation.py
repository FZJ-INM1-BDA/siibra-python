# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/HumanBrainProject/openMINDS/dbb4c54/v3/computation/v1/simulation.schema.json
#   timestamp: 2021-11-25T12:26:52+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Field


class ResourceUsageItem(BaseModel):
    typeOfUncertainty: Optional[Any] = Field(
        None,
        description='Distinct technique used to quantify the uncertainty of a measurement.',
        title='typeOfUncertainty',
    )
    uncertainty: Optional[List[float]] = Field(
        None,
        description='Quantitative value range defining the uncertainty of a measurement.',
        max_items=2,
        min_items=2,
        title='uncertainty',
    )
    unit: Optional[Any] = Field(
        None,
        description='Determinate quantity adopted as a standard of measurement.',
        title='unit',
    )
    value: float = Field(..., description='Entry for a property.', title='value')


class ResourceUsageItem1(BaseModel):
    maxValue: float = Field(
        ..., description='Greatest quantity attained or allowed.', title='maxValue'
    )
    maxValueUnit: Optional[Any] = Field(None, title='maxValueUnit')
    minValue: float = Field(
        ..., description='Smallest quantity attained or allowed.', title='minValue'
    )
    minValueUnit: Optional[Any] = Field(None, title='minValueUnit')


class Model(BaseModel):
    _id: str = Field(..., alias='@id', description='Metadata node identifier.')
    _type: str = Field(..., alias='@type')
    environment: Dict[str, Any] = Field(
        ..., alias='https://openminds.ebrains.eu/vocab/environment', title='environment'
    )
    input: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/input',
        description='Something or someone that is put into or participates in a process or machine.',
        title='input',
    )
    launchConfiguration: Dict[str, Any] = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/launchConfiguration',
        title='launchConfiguration',
    )
    output: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/output',
        description='Something or someone that comes out of, is delivered or produced by a process or machine.',
        title='output',
    )
    resourceUsage: Optional[Union[ResourceUsageItem, ResourceUsageItem1]] = Field(
        None, alias='https://openminds.ebrains.eu/vocab/resourceUsage'
    )
    startedBy: Optional[Dict[str, Any]] = Field(
        None, alias='https://openminds.ebrains.eu/vocab/startedBy', title='startedBy'
    )
    status: Optional[Dict[str, Any]] = Field(
        None, alias='https://openminds.ebrains.eu/vocab/status', title='status'
    )
    tags: Optional[List[str]] = Field(
        None, alias='https://openminds.ebrains.eu/vocab/tags', min_items=1, title='tags'
    )
    wasInformedBy: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/wasInformedBy',
        title='wasInformedBy',
    )
