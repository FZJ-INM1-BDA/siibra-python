# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/HumanBrainProject/openMINDS/dbb4c54/v3/computation/v1/optimization.schema.json
#   timestamp: 2021-11-29T11:19:08+00:00

from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Field


class ResourceUsageItem(BaseModel):
    type_of_uncertainty: Optional[Any] = Field(
        None,
        alias='typeOfUncertainty',
        description='Distinct technique used to quantify the uncertainty of a measurement.',
        title='typeOfUncertainty',
    )
    uncertainty: Optional[List[float]] = Field(
        None,
        description='Quantitative value range defining the uncertainty of a measurement.',
        max_items=2,
        min_items=2,
        title='uncertainty',
    )
    unit: Optional[Any] = Field(
        None,
        description='Determinate quantity adopted as a standard of measurement.',
        title='unit',
    )
    value: float = Field(..., description='Entry for a property.', title='value')


class ResourceUsageItem1(BaseModel):
    max_value: float = Field(
        ...,
        alias='maxValue',
        description='Greatest quantity attained or allowed.',
        title='maxValue',
    )
    max_value_unit: Optional[Any] = Field(
        None, alias='maxValueUnit', title='maxValueUnit'
    )
    min_value: float = Field(
        ...,
        alias='minValue',
        description='Smallest quantity attained or allowed.',
        title='minValue',
    )
    min_value_unit: Optional[Any] = Field(
        None, alias='minValueUnit', title='minValueUnit'
    )


class Model(BaseModel):
    id: str = Field(..., alias='@id', description='Metadata node identifier.')
    type: str = Field(..., alias='@type')
    environment: Dict[str, Any] = Field(
        ..., alias='https://openminds.ebrains.eu/vocab/environment', title='environment'
    )
    input: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/input',
        description='Something or someone that is put into or participates in a process or machine.',
        title='input',
    )
    launch_configuration: Dict[str, Any] = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/launchConfiguration',
        title='launchConfiguration',
    )
    output: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/output',
        description='Something or someone that comes out of, is delivered or produced by a process or machine.',
        title='output',
    )
    resource_usage: Optional[Union['ResourceUsageItem', 'ResourceUsageItem1']] = Field(
        None, alias='https://openminds.ebrains.eu/vocab/resourceUsage'
    )
    started_by: Optional[Dict[str, Any]] = Field(
        None, alias='https://openminds.ebrains.eu/vocab/startedBy', title='startedBy'
    )
    status: Optional[Dict[str, Any]] = Field(
        None, alias='https://openminds.ebrains.eu/vocab/status', title='status'
    )
    tags: Optional[List[str]] = Field(
        None, alias='https://openminds.ebrains.eu/vocab/tags', min_items=1, title='tags'
    )
    was_informed_by: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/wasInformedBy',
        title='wasInformedBy',
    )
