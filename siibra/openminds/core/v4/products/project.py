# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/HumanBrainProject/openMINDS/dbb4c54/v3/core/v4/products/project.schema.json
#   timestamp: 2021-11-29T11:19:36+00:00

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class Model(BaseModel):
    id: str = Field(..., alias='@id', description='Metadata node identifier.')
    type: str = Field(..., alias='@type')
    coordinator: Optional[List[Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/coordinator',
        description='Legal person who organizes the collaborative work of people or groups.',
        min_items=1,
        title='coordinator',
    )
    description: str = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/description',
        description='Longer statement or account giving the characteristics of someone or something.',
        title='description',
    )
    full_name: str = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/fullName',
        description='Whole, non-abbreviated name of something or somebody.',
        title='fullName',
    )
    has_research_products: List[Any] = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/hasResearchProducts',
        description='Reference to subsidiary research products.',
        min_items=2,
        title='hasResearchProducts',
    )
    homepage: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/homepage',
        description='Main website of something or someone.',
        title='homepage',
    )
    short_name: str = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/shortName',
        description='Shortened or fully abbreviated name of something or somebody.',
        title='shortName',
    )
