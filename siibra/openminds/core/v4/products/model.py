# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/HumanBrainProject/openMINDS/dbb4c54/v3/core/v4/products/model.schema.json
#   timestamp: 2021-11-29T11:19:35+00:00

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, constr


class Model(BaseModel):
    id: str = Field(..., alias='@id', description='Metadata node identifier.')
    type: str = Field(..., alias='@type')
    abstraction_level: Dict[str, Any] = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/abstractionLevel',
        description='Extent of simplification of physical, spatial, or temporal details or attributes in the study of objects or systems.',
        title='abstractionLevel',
    )
    custodian: Optional[List[Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/custodian',
        description="The 'custodian' is a legal person who is responsible for the content and quality of the data, metadata, and/or code of a research product.",
        min_items=1,
        title='custodian',
    )
    description: constr(max_length=2000) = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/description',
        description='Longer statement or account giving the characteristics of someone or something.',
        title='description',
    )
    developer: List[Any] = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/developer',
        description='Legal person that creates or improves products or services (e.g., software, applications, etc.).',
        min_items=1,
        title='developer',
    )
    digital_identifier: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/digitalIdentifier',
        description='Digital handle to identify objects or legal persons.',
        title='digitalIdentifier',
    )
    full_name: str = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/fullName',
        description='Whole, non-abbreviated name of something or somebody.',
        title='fullName',
    )
    has_version: List[Any] = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/hasVersion',
        description='Reference to variants of an original.',
        min_items=1,
        title='hasVersion',
    )
    homepage: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/homepage',
        description='Main website of something or someone.',
        title='homepage',
    )
    how_to_cite: Optional[str] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/howToCite',
        description='Preferred format for citing a particular object or legal person.',
        title='howToCite',
    )
    scope: Dict[str, Any] = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/scope',
        description='Extent of something.',
        title='scope',
    )
    short_name: constr(max_length=30) = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/shortName',
        description='Shortened or fully abbreviated name of something or somebody.',
        title='shortName',
    )
    study_target: List[Any] = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/studyTarget',
        description='Structure or function that was targeted within a study.',
        min_items=1,
        title='studyTarget',
    )
