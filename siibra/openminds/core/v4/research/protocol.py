# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/HumanBrainProject/openMINDS/dbb4c54/v3/core/v4/research/protocol.schema.json
#   timestamp: 2021-11-25T14:29:41+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import BaseModel, Field


class Model(BaseModel):
    _id: str = Field(..., alias='@id', description='Metadata node identifier.')
    _type: str = Field(..., alias='@type')
    description: str = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/description',
        description='Longer statement or account giving the characteristics of someone or something.',
        title='description',
    )
    name: str = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/name',
        description='Word or phrase that constitutes the distinctive designation of a being or thing.',
        title='name',
    )
    stimulation: Optional[List[Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/stimulation',
        min_items=1,
        title='stimulation',
    )
    technique: List[Any] = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/technique',
        description='Method of accomplishing a desired aim.',
        min_items=1,
        title='technique',
    )
