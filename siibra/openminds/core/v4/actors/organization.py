# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/HumanBrainProject/openMINDS/dbb4c54/v3/core/v4/actors/organization.schema.json
#   timestamp: 2021-11-25T12:27:09+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class Model(BaseModel):
    _id: str = Field(..., alias='@id', description='Metadata node identifier.')
    _type: str = Field(..., alias='@type')
    digitalIdentifier: Optional[List[Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/digitalIdentifier',
        description='Digital handle to identify objects or legal persons.',
        min_items=1,
        title='digitalIdentifier',
    )
    fullName: str = Field(
        ...,
        alias='https://openminds.ebrains.eu/vocab/fullName',
        description='Whole, non-abbreviated name of something or somebody.',
        title='fullName',
    )
    hasParent: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/hasParent',
        description='Reference to a parent object or legal person.',
        title='hasParent',
    )
    homepage: Optional[Dict[str, Any]] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/homepage',
        description='Main website of something or someone.',
        title='homepage',
    )
    shortName: Optional[str] = Field(
        None,
        alias='https://openminds.ebrains.eu/vocab/shortName',
        description='Shortened or fully abbreviated name of something or somebody.',
        title='shortName',
    )
